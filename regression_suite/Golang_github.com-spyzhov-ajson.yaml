# This file was generated by src/compile_implementation_report.sh from https://github.com/cburgmer/json-path-comparison/

# This file tracks all results of the given implementation for queries which the implementation either does not match
# an existing consensus or where no consensus exists.
# It can be used to track changes in the underlying implementation and complements the regression report.

implementation: Golang_github.com-spyzhov-ajson
queries:
  - id: array_slice_with_large_number_for_end_and_negative_step
    status: open
    result: ["third", "second", "first"]
  - id: array_slice_with_large_number_for_start_end_negative_step
    status: open
    result: ["fifth", "forth"]
  - id: array_slice_with_negative_step
    status: open
    result: ["forth", "second"]
  - id: array_slice_with_negative_step_and_start_greater_than_end
    status: open
    result: []
  - id: array_slice_with_negative_step_on_partially_overlapping_array
    status: open
    result: ["fifth"]
  - id: array_slice_with_negative_step_only
    status: open
    result: ["fifth", "third", "first"]
  - id: array_slice_with_open_end_and_negative_step
    status: open
    result: ["forth", "third", "second", "first"]
  - id: array_slice_with_open_start_and_negative_step
    status: open
    result: ["fifth", "forth"]
  - id: array_slice_with_step_0
    status: error
  - id: bracket_notation_with_empty_path
    status: fail
    result: [42]
  - id: bracket_notation_with_number_on_object
    status: fail
    result: ["value"]
  - id: bracket_notation_with_quoted_escaped_backslash
    status: open
    result: ["value"]
  - id: bracket_notation_with_quoted_escaped_single_quote
    status: open
    result: ["value"]
  - id: bracket_notation_with_quoted_special_characters_combined
    status: open
    result: [42]
  - id: bracket_notation_with_spaces
    status: fail
    result: [5]
  - id: bracket_notation_with_two_literals_separated_by_dot
    status: fail
    result: []
  - id: bracket_notation_with_two_literals_separated_by_dot_without_quotes
    status: fail
    result: ["42"]
  - id: bracket_notation_without_quotes
    status: fail
    result: ["value"]
  - id: current_with_dot_notation
    status: open
    result: [1]
  - id: dot_bracket_notation
    status: open
    result: ["value"]
  - id: dot_bracket_notation_with_double_quotes
    status: open
    result: ["value"]
  - id: dot_bracket_notation_without_quotes
    status: fail
    result: ["value"]
  - id: dot_notation_after_recursive_descent_with_extra_dot
    status: open
    result: ["russian dolls", "russian dolls", "russian dolls", "russian dolls", "russian dolls", "something", "something", "something", "something", "top", "value", "value", {"key": "russian dolls"}, {"key": "russian dolls"}, {"key": "russian dolls"}, {"key": "russian dolls"}]
  - id: dot_notation_with_double_quotes
    status: open
    result: ["value"]
  - id: dot_notation_with_double_quotes_after_recursive_descent
    status: open
    result: ["russian dolls", "something", "top", "value", {"key": "russian dolls"}]
  - id: dot_notation_with_empty_path
    status: fail
    result: [{"": 9001, "''": "nice", "key": 42}]
  - id: dot_notation_with_key_named_length_on_array
    status: fail
    result: [3]
  - id: dot_notation_with_key_root_literal
    status: open
    result: [{"$": "value"}]
  - id: dot_notation_with_number
    status: open
    result: ["third"]
  - id: dot_notation_with_number_-1
    status: open
    result: ["fifth"]
  - id: dot_notation_with_single_quotes
    status: open
    result: ["value"]
  - id: dot_notation_with_single_quotes_after_recursive_descent
    status: open
    result: ["russian dolls", "something", "top", "value", {"key": "russian dolls"}]
  - id: dot_notation_with_single_quotes_and_dot
    status: error
  - id: dot_notation_with_space_padded_key
    status: open
    result: [3]
  - id: dot_notation_without_root
    status: open
    result: []
  - id: dot_notation_without_root_and_dot
    status: open
    result: NOT_SUPPORTED
  - id: empty
    status: open
    result: NOT_SUPPORTED
  - id: filter_expression_after_dot_notation_with_wildcard_after_recursive_descent
    status: open
    result: [{"id": 3, "name": "another"}, {"id": 4, "name": "more"}, {"id": 5, "name": "next to last"}]
  - id: filter_expression_after_recursive_descent
    status: open
    result: [{"id": 2}, {"id": 2}, {"id": 2}, {"id": 2}]
  - id: filter_expression_on_object
    status: open
    result: [{"key": 1}]
  - id: filter_expression_with_addition
    status: error
  - id: filter_expression_with_boolean_and_operator_and_value_false
    status: open
    result: []
  - id: filter_expression_with_boolean_and_operator_and_value_true
    status: open
    result: [{"key": 1}, {"key": 3}]
  - id: filter_expression_with_boolean_or_operator_and_value_false
    status: open
    result: [{"key": 1}, {"key": 3}]
  - id: filter_expression_with_boolean_or_operator_and_value_true
    status: open
    result: [{"key": 1}, {"key": 3}, {"key": "nice"}, {"key": true}, {"key": null}, {"key": false}, {"key": {}}, {"key": []}, {"key": -1}, {"key": 0}, {"key": ""}]
  - id: filter_expression_with_bracket_notation_with_-1
    status: open
    result: [[0, 2], [2]]
  - id: filter_expression_with_bracket_notation_with_number_on_object
    status: open
    result: [["a", "b"]]
  - id: filter_expression_with_current_object
    status: open
    result: ["some value", "value", 1, -1, true]
  - id: filter_expression_with_different_grouped_operators
    status: open
    result: [{"a": true, "b": true}, {"a": true, "b": true, "c": true}, {"a": true, "c": true}]
  - id: filter_expression_with_different_ungrouped_operators
    status: open
    result: [{"a": true, "b": true}, {"a": true, "b": true, "c": true}, {"b": true, "c": true}, {"a": true, "c": true}, {"c": true}]
  - id: filter_expression_with_division
    status: error
  - id: filter_expression_with_dot_notation_with_dash
    status: error
  - id: filter_expression_with_dot_notation_with_number
    status: open
    result: [{"2": "second", "a": "first", "b": "third"}]
  - id: filter_expression_with_dot_notation_with_number_on_array
    status: open
    result: [["first", "second", "third", "forth", "fifth"]]
  - id: filter_expression_with_empty_expression
    status: error
  - id: filter_expression_with_equals
    status: open
    result: [{"key": 42}]
  - id: filter_expression_with_equals_array
    status: error
  - id: filter_expression_with_equals_array_for_array_slice_with_range_1
    status: error
  - id: filter_expression_with_equals_array_for_dot_notation_with_star
    status: error
  - id: filter_expression_with_equals_array_or_equals_true
    status: error
  - id: filter_expression_with_equals_array_with_single_quotes
    status: error
  - id: filter_expression_with_equals_boolean_expression_value
    status: open
    result: [{"key": 44}]
  - id: filter_expression_with_equals_false
    status: open
    result: [{"key": false}]
  - id: filter_expression_with_equals_null
    status: open
    result: [{"some": "some value"}, {"key": null}]
  - id: filter_expression_with_equals_number_for_array_slice_with_range_1
    status: open
    result: [[1, 2, 3], [1]]
  - id: filter_expression_with_equals_number_for_bracket_notation_with_star
    status: open
    result: [[2]]
  - id: filter_expression_with_equals_number_for_dot_notation_with_star
    status: open
    result: [[2]]
  - id: filter_expression_with_equals_number_with_fraction
    status: open
    result: [{"key": -12.3}]
  - id: filter_expression_with_equals_number_with_leading_zeros
    status: error
  - id: filter_expression_with_equals_object
    status: error
  - id: filter_expression_with_equals_on_object
    status: open
    result: [{"key": 42}]
  - id: filter_expression_with_equals_string_with_unicode_character_escape
    status: open
    result: [{"key": "Mot\u00f6rhead"}]
  - id: filter_expression_with_equals_true
    status: open
    result: [{"key": true}]
  - id: filter_expression_with_equals_with_path_and_path
    status: open
    result: [{"key1": 10, "key2": 10}, {}, {"key1": null, "key2": null}, {"key1": null}, {"key2": null}, {"key1": 0, "key2": 0}, {"key1": -1, "key2": -1}, {"key1": "", "key2": ""}, {"key1": false, "key2": false}, {"key1": true, "key2": true}, {"key1": [], "key2": []}, {"key1": {}, "key2": {}}, {"key1": {"a": 1, "b": 2}, "key2": {"a": 1, "b": 2}}]
  - id: filter_expression_with_greater_than
    status: open
    result: [{"key": 43}, {"key": 42.0001}, {"key": 100}]
  - id: filter_expression_with_greater_than_or_equal
    status: open
    result: [{"key": 42}, {"key": 43}, {"key": 42.0001}, {"key": 100}]
  - id: filter_expression_with_in_array_of_values
    status: error
  - id: filter_expression_with_in_current_object
    status: error
  - id: filter_expression_with_length_free_function
    status: open
    result: [[1, 2, 3, 4]]
  - id: filter_expression_with_length_function
    status: open
    result: []
  - id: filter_expression_with_length_property
    status: fail
    result: [[1, 2, 3, 4]]
  - id: filter_expression_with_less_than
    status: open
    result: [{"key": 0}, {"key": -1}, {"key": 41}, {"key": 41.9999}]
  - id: filter_expression_with_less_than_or_equal
    status: open
    result: [{"key": 0}, {"key": 42}, {"key": -1}, {"key": 41}, {"key": 41.9999}]
  - id: filter_expression_with_local_dot_key_and_null_in_data
    status: error
  - id: filter_expression_with_multiplication
    status: open
    result: [{"key*2": 100}]
  - id: filter_expression_with_negation_and_equals
    status: error
  - id: filter_expression_with_negation_and_equals_array_or_equals_true
    status: error
  - id: filter_expression_with_negation_and_less_than
    status: error
  - id: filter_expression_with_negation_and_without_value
    status: error
  - id: filter_expression_with_non_singular_existence_test
    status: open
    result: [{"a": [1]}, {"a": [1, 2]}, {"a": {"x": "y"}}, {"a": {"w": "z", "x": "y"}}]
  - id: filter_expression_with_not_equals
    status: open
    result: [{"key": 0}, {"key": -1}, {"key": 1}, {"key": 41}, {"key": 43}, {"key": 42.0001}, {"key": 41.9999}, {"key": 100}, {"key": "some"}, {"key": "42"}, {"key": null}, {"key": 420}, {"key": ""}, {"key": {}}, {"key": []}, {"key": [42]}, {"key": {"key": 42}}, {"key": {"some": 42}}, {"some": "value"}]
  - id: filter_expression_with_not_equals_array_or_equals_true
    status: error
  - id: filter_expression_with_regular_expression
    status: error
  - id: filter_expression_with_regular_expression_from_member
    status: error
  - id: filter_expression_with_set_wise_comparison_to_scalar
    status: open
    result: []
  - id: filter_expression_with_set_wise_comparison_to_set
    status: error
  - id: filter_expression_with_single_equal
    status: error
  - id: filter_expression_with_subfilter
    status: open
    result: [{"a": [{"price": 11}]}, {"a": [{"price": 8}, {"price": 12}, {"price": 3}]}]
  - id: filter_expression_with_subtraction
    status: error
  - id: filter_expression_with_triple_equal
    status: error
  - id: filter_expression_with_value
    status: open
    result: [{"key": true}, {"key": "value"}, {"key": 1}, {"key": -1}, {"key": 42}]
  - id: filter_expression_with_value_after_recursive_descent
    status: open
    result: [{"id": 2}, {"id": 2}, {"id": 2}, {"id": 2}, {"id": {"id": 2}}]
  - id: filter_expression_with_value_false
    status: open
    result: []
  - id: filter_expression_with_value_from_recursive_descent
    status: open
    result: [{"key": [{"child": 1}, {"child": 2}]}, {"key": [{"child": 2}]}]
  - id: filter_expression_with_value_null
    status: open
    result: []
  - id: filter_expression_with_value_true
    status: open
    result: [1, 3, "nice", true, null, false, {}, [], -1, 0, ""]
  - id: filter_expression_without_parens
    status: open
    result: []
  - id: filter_expression_without_value
    status: open
    result: [{"key": true}, {"key": "value"}, {"key": 1}, {"key": -1}, {"key": 42}]
  - id: function_sum
    status: open
    result: []
  - id: recursive_descent
    status: open
    result: [[0, 1], [{"a": {"b": "c"}}, [0, 1]], {"a": {"b": "c"}}, {"b": "c"}]
  - id: recursive_descent_after_dot_notation
    status: open
    result: [[0, 1], {"complex": "string", "primitives": [0, 1]}]
  - id: script_expression
    status: fail
    result: ["fifth"]
  - id: union_with_filter
    status: error
  - id: union_with_keys_after_array_slice
    status: fail
    result: ["cc1", "cc2", "dd1", "dd2"]
  - id: union_with_keys_after_dot_notation_with_wildcard
    status: fail
    result: ["cc1", "cc2", "dd1", "dd2"]
  - id: union_with_repeated_matches_after_dot_notation_with_wildcard
    status: error
  - id: union_with_slice_and_number
    status: error
  - id: union_with_wildcard_and_number
    status: open
    result: ["second"]
